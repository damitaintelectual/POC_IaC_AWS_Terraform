name: $(Rev:r)

resources:
  - repo: self

trigger:
  - develop

pool:
  vmImage: ubuntu-18.04

steps:
# Install Terraform especific version 
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: Install Terraform 1.0.7
    inputs:
      terraformVersion: 1.0.7

# Initialize and connect terraform with AWS / S3 bucket
  - task: TerraformTaskV2@2
    displayName: 'Terraform : AWS connection & init'
    inputs:
      provider: aws
      workingDirectory: src
      backendServiceAWS: 59a2c16f-ed24-4b0e-b097-81f5586fbbcc
      backendAWSBucketName: terraform-s3-backup
      backendAWSKey: tfstate/terraform.tfstate

# Validate main.tf file 
  - task: TerraformTaskV2@2
    displayName: 'Terraform : validate'
    inputs:
      provider: aws
      command: validate
      workingDirectory: src
      backendServiceAWS: 59a2c16f-ed24-4b0e-b097-81f5586fbbcc

# Planning the IaC
  - task: TerraformTaskV2@2
    name: ''
    displayName: 'Terraform : plan'
    inputs:
      provider: aws
      command: plan
      workingDirectory: src
      commandOptions: -out=tfplan -input=false
      environmentServiceNameAWS: 59a2c16f-ed24-4b0e-b097-81f5586fbbcc

# Destroy IaC planned 
  - task: TerraformTaskV2@2
    displayName: 'Terraform : destroy'
    inputs:
      provider: aws
      command: apply
      workingDirectory: src
      commandOptions: -destroy
      environmentServiceNameAWS: 59a2c16f-ed24-4b0e-b097-81f5586fbbcc